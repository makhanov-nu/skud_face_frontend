/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './app/routes/__root';
import { Route as AuthImport } from './app/routes/_auth';

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')();
const AuthAboutLazyImport = createFileRoute('/_auth/about')();

// Create/Update Routes

const AuthRoute = AuthImport.update({
	id: '/_auth',
	getParentRoute: () => rootRoute,
} as any);

const IndexLazyRoute = IndexLazyImport.update({
	path: '/',
	getParentRoute: () => rootRoute,
} as any).lazy(() => import('./app/routes/index.lazy').then((d) => d.Route));

const AuthAboutLazyRoute = AuthAboutLazyImport.update({
	path: '/about',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth.about.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
	interface FileRoutesByPath {
		'/': {
			id: '/';
			path: '/';
			fullPath: '/';
			preLoaderRoute: typeof IndexLazyImport;
			parentRoute: typeof rootRoute;
		};
		'/_auth': {
			id: '/_auth';
			path: '';
			fullPath: '';
			preLoaderRoute: typeof AuthImport;
			parentRoute: typeof rootRoute;
		};
		'/_auth/about': {
			id: '/_auth/about';
			path: '/about';
			fullPath: '/about';
			preLoaderRoute: typeof AuthAboutLazyImport;
			parentRoute: typeof AuthImport;
		};
	}
}

// Create and export the route tree

interface AuthRouteChildren {
	AuthAboutLazyRoute: typeof AuthAboutLazyRoute;
}

const AuthRouteChildren: AuthRouteChildren = {
	AuthAboutLazyRoute: AuthAboutLazyRoute,
};

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren);

export interface FileRoutesByFullPath {
	'/': typeof IndexLazyRoute;
	'': typeof AuthRouteWithChildren;
	'/about': typeof AuthAboutLazyRoute;
}

export interface FileRoutesByTo {
	'/': typeof IndexLazyRoute;
	'': typeof AuthRouteWithChildren;
	'/about': typeof AuthAboutLazyRoute;
}

export interface FileRoutesById {
	__root__: typeof rootRoute;
	'/': typeof IndexLazyRoute;
	'/_auth': typeof AuthRouteWithChildren;
	'/_auth/about': typeof AuthAboutLazyRoute;
}

export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths: '/' | '' | '/about';
	fileRoutesByTo: FileRoutesByTo;
	to: '/' | '' | '/about';
	id: '__root__' | '/' | '/_auth' | '/_auth/about';
	fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
	IndexLazyRoute: typeof IndexLazyRoute;
	AuthRoute: typeof AuthRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
	IndexLazyRoute: IndexLazyRoute,
	AuthRoute: AuthRouteWithChildren,
};

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/about"
      ]
    },
    "/_auth/about": {
      "filePath": "_auth.about.lazy.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
