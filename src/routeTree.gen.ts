/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './app/routes/__root';
import { Route as AuthImport } from './app/routes/_auth';
import { Route as AuthUsersAddSingleUserImport } from './app/routes/_auth/users/add-single-user';
import { Route as AuthUsersAddImport } from './app/routes/_auth/users/add';

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')();
const AuthUsersIndexLazyImport = createFileRoute('/_auth/users/')();
const AuthPointIndexLazyImport = createFileRoute('/_auth/point/')();
const AuthOrganizationIndexLazyImport = createFileRoute('/_auth/organization/')();
const AuthMonitoringIndexLazyImport = createFileRoute('/_auth/monitoring/')();
const AuthCameraIndexLazyImport = createFileRoute('/_auth/camera/')();
const AuthAdminIndexLazyImport = createFileRoute('/_auth/admin/')();
const AuthPointAddLazyImport = createFileRoute('/_auth/point/add')();
const AuthOrganizationAddLazyImport = createFileRoute('/_auth/organization/add')();
const AuthMonitoringHistoryLazyImport = createFileRoute('/_auth/monitoring/history')();
const AuthCameraAddLazyImport = createFileRoute('/_auth/camera/add')();
const AuthAdminAddLazyImport = createFileRoute('/_auth/admin/add')();
const AuthUsersEditIdLazyImport = createFileRoute('/_auth/users/edit/$id')();
const AuthPointEditIdLazyImport = createFileRoute('/_auth/point/edit/$id')();
const AuthOrganizationEditIdLazyImport = createFileRoute('/_auth/organization/edit/$id')();
const AuthCameraEditIdLazyImport = createFileRoute('/_auth/camera/edit/$id')();
const AuthAdminEditIdLazyImport = createFileRoute('/_auth/admin/edit/$id')();

// Create/Update Routes

const AuthRoute = AuthImport.update({
	id: '/_auth',
	getParentRoute: () => rootRoute,
} as any);

const IndexLazyRoute = IndexLazyImport.update({
	path: '/',
	getParentRoute: () => rootRoute,
} as any).lazy(() => import('./app/routes/index.lazy').then((d) => d.Route));

const AuthUsersIndexLazyRoute = AuthUsersIndexLazyImport.update({
	path: '/users/',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/users/index.lazy').then((d) => d.Route));

const AuthPointIndexLazyRoute = AuthPointIndexLazyImport.update({
	path: '/point/',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/point/index.lazy').then((d) => d.Route));

const AuthOrganizationIndexLazyRoute = AuthOrganizationIndexLazyImport.update({
	path: '/organization/',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/organization/index.lazy').then((d) => d.Route));

const AuthMonitoringIndexLazyRoute = AuthMonitoringIndexLazyImport.update({
	path: '/monitoring/',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/monitoring/index.lazy').then((d) => d.Route));

const AuthCameraIndexLazyRoute = AuthCameraIndexLazyImport.update({
	path: '/camera/',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/camera/index.lazy').then((d) => d.Route));

const AuthAdminIndexLazyRoute = AuthAdminIndexLazyImport.update({
	path: '/admin/',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/admin/index.lazy').then((d) => d.Route));

const AuthPointAddLazyRoute = AuthPointAddLazyImport.update({
	path: '/point/add',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/point/add.lazy').then((d) => d.Route));

const AuthOrganizationAddLazyRoute = AuthOrganizationAddLazyImport.update({
	path: '/organization/add',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/organization/add.lazy').then((d) => d.Route));

const AuthMonitoringHistoryLazyRoute = AuthMonitoringHistoryLazyImport.update({
	path: '/monitoring/history',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/monitoring/history.lazy').then((d) => d.Route));

const AuthCameraAddLazyRoute = AuthCameraAddLazyImport.update({
	path: '/camera/add',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/camera/add.lazy').then((d) => d.Route));

const AuthAdminAddLazyRoute = AuthAdminAddLazyImport.update({
	path: '/admin/add',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/admin/add.lazy').then((d) => d.Route));

const AuthUsersAddSingleUserRoute = AuthUsersAddSingleUserImport.update({
	path: '/users/add-single-user',
	getParentRoute: () => AuthRoute,
} as any);

const AuthUsersAddRoute = AuthUsersAddImport.update({
	path: '/users/add',
	getParentRoute: () => AuthRoute,
} as any);

const AuthUsersEditIdLazyRoute = AuthUsersEditIdLazyImport.update({
	path: '/users/edit/$id',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/users/edit.$id.lazy').then((d) => d.Route));

const AuthPointEditIdLazyRoute = AuthPointEditIdLazyImport.update({
	path: '/point/edit/$id',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/point/edit.$id.lazy').then((d) => d.Route));

const AuthOrganizationEditIdLazyRoute = AuthOrganizationEditIdLazyImport.update({
	path: '/organization/edit/$id',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/organization/edit.$id.lazy').then((d) => d.Route));

const AuthCameraEditIdLazyRoute = AuthCameraEditIdLazyImport.update({
	path: '/camera/edit/$id',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/camera/edit.$id.lazy').then((d) => d.Route));

const AuthAdminEditIdLazyRoute = AuthAdminEditIdLazyImport.update({
	path: '/admin/edit/$id',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/admin/edit.$id.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
	interface FileRoutesByPath {
		'/': {
			id: '/';
			path: '/';
			fullPath: '/';
			preLoaderRoute: typeof IndexLazyImport;
			parentRoute: typeof rootRoute;
		};
		'/_auth': {
			id: '/_auth';
			path: '';
			fullPath: '';
			preLoaderRoute: typeof AuthImport;
			parentRoute: typeof rootRoute;
		};
		'/_auth/users/add': {
			id: '/_auth/users/add';
			path: '/users/add';
			fullPath: '/users/add';
			preLoaderRoute: typeof AuthUsersAddImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/users/add-single-user': {
			id: '/_auth/users/add-single-user';
			path: '/users/add-single-user';
			fullPath: '/users/add-single-user';
			preLoaderRoute: typeof AuthUsersAddSingleUserImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/admin/add': {
			id: '/_auth/admin/add';
			path: '/admin/add';
			fullPath: '/admin/add';
			preLoaderRoute: typeof AuthAdminAddLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/camera/add': {
			id: '/_auth/camera/add';
			path: '/camera/add';
			fullPath: '/camera/add';
			preLoaderRoute: typeof AuthCameraAddLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/monitoring/history': {
			id: '/_auth/monitoring/history';
			path: '/monitoring/history';
			fullPath: '/monitoring/history';
			preLoaderRoute: typeof AuthMonitoringHistoryLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/organization/add': {
			id: '/_auth/organization/add';
			path: '/organization/add';
			fullPath: '/organization/add';
			preLoaderRoute: typeof AuthOrganizationAddLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/point/add': {
			id: '/_auth/point/add';
			path: '/point/add';
			fullPath: '/point/add';
			preLoaderRoute: typeof AuthPointAddLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/admin/': {
			id: '/_auth/admin/';
			path: '/admin';
			fullPath: '/admin';
			preLoaderRoute: typeof AuthAdminIndexLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/camera/': {
			id: '/_auth/camera/';
			path: '/camera';
			fullPath: '/camera';
			preLoaderRoute: typeof AuthCameraIndexLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/monitoring/': {
			id: '/_auth/monitoring/';
			path: '/monitoring';
			fullPath: '/monitoring';
			preLoaderRoute: typeof AuthMonitoringIndexLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/organization/': {
			id: '/_auth/organization/';
			path: '/organization';
			fullPath: '/organization';
			preLoaderRoute: typeof AuthOrganizationIndexLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/point/': {
			id: '/_auth/point/';
			path: '/point';
			fullPath: '/point';
			preLoaderRoute: typeof AuthPointIndexLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/users/': {
			id: '/_auth/users/';
			path: '/users';
			fullPath: '/users';
			preLoaderRoute: typeof AuthUsersIndexLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/admin/edit/$id': {
			id: '/_auth/admin/edit/$id';
			path: '/admin/edit/$id';
			fullPath: '/admin/edit/$id';
			preLoaderRoute: typeof AuthAdminEditIdLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/camera/edit/$id': {
			id: '/_auth/camera/edit/$id';
			path: '/camera/edit/$id';
			fullPath: '/camera/edit/$id';
			preLoaderRoute: typeof AuthCameraEditIdLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/organization/edit/$id': {
			id: '/_auth/organization/edit/$id';
			path: '/organization/edit/$id';
			fullPath: '/organization/edit/$id';
			preLoaderRoute: typeof AuthOrganizationEditIdLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/point/edit/$id': {
			id: '/_auth/point/edit/$id';
			path: '/point/edit/$id';
			fullPath: '/point/edit/$id';
			preLoaderRoute: typeof AuthPointEditIdLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/users/edit/$id': {
			id: '/_auth/users/edit/$id';
			path: '/users/edit/$id';
			fullPath: '/users/edit/$id';
			preLoaderRoute: typeof AuthUsersEditIdLazyImport;
			parentRoute: typeof AuthImport;
		};
	}
}

// Create and export the route tree

interface AuthRouteChildren {
	AuthUsersAddRoute: typeof AuthUsersAddRoute;
	AuthUsersAddSingleUserRoute: typeof AuthUsersAddSingleUserRoute;
	AuthAdminAddLazyRoute: typeof AuthAdminAddLazyRoute;
	AuthCameraAddLazyRoute: typeof AuthCameraAddLazyRoute;
	AuthMonitoringHistoryLazyRoute: typeof AuthMonitoringHistoryLazyRoute;
	AuthOrganizationAddLazyRoute: typeof AuthOrganizationAddLazyRoute;
	AuthPointAddLazyRoute: typeof AuthPointAddLazyRoute;
	AuthAdminIndexLazyRoute: typeof AuthAdminIndexLazyRoute;
	AuthCameraIndexLazyRoute: typeof AuthCameraIndexLazyRoute;
	AuthMonitoringIndexLazyRoute: typeof AuthMonitoringIndexLazyRoute;
	AuthOrganizationIndexLazyRoute: typeof AuthOrganizationIndexLazyRoute;
	AuthPointIndexLazyRoute: typeof AuthPointIndexLazyRoute;
	AuthUsersIndexLazyRoute: typeof AuthUsersIndexLazyRoute;
	AuthAdminEditIdLazyRoute: typeof AuthAdminEditIdLazyRoute;
	AuthCameraEditIdLazyRoute: typeof AuthCameraEditIdLazyRoute;
	AuthOrganizationEditIdLazyRoute: typeof AuthOrganizationEditIdLazyRoute;
	AuthPointEditIdLazyRoute: typeof AuthPointEditIdLazyRoute;
	AuthUsersEditIdLazyRoute: typeof AuthUsersEditIdLazyRoute;
}

const AuthRouteChildren: AuthRouteChildren = {
	AuthUsersAddRoute: AuthUsersAddRoute,
	AuthUsersAddSingleUserRoute: AuthUsersAddSingleUserRoute,
	AuthAdminAddLazyRoute: AuthAdminAddLazyRoute,
	AuthCameraAddLazyRoute: AuthCameraAddLazyRoute,
	AuthMonitoringHistoryLazyRoute: AuthMonitoringHistoryLazyRoute,
	AuthOrganizationAddLazyRoute: AuthOrganizationAddLazyRoute,
	AuthPointAddLazyRoute: AuthPointAddLazyRoute,
	AuthAdminIndexLazyRoute: AuthAdminIndexLazyRoute,
	AuthCameraIndexLazyRoute: AuthCameraIndexLazyRoute,
	AuthMonitoringIndexLazyRoute: AuthMonitoringIndexLazyRoute,
	AuthOrganizationIndexLazyRoute: AuthOrganizationIndexLazyRoute,
	AuthPointIndexLazyRoute: AuthPointIndexLazyRoute,
	AuthUsersIndexLazyRoute: AuthUsersIndexLazyRoute,
	AuthAdminEditIdLazyRoute: AuthAdminEditIdLazyRoute,
	AuthCameraEditIdLazyRoute: AuthCameraEditIdLazyRoute,
	AuthOrganizationEditIdLazyRoute: AuthOrganizationEditIdLazyRoute,
	AuthPointEditIdLazyRoute: AuthPointEditIdLazyRoute,
	AuthUsersEditIdLazyRoute: AuthUsersEditIdLazyRoute,
};

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren);

export interface FileRoutesByFullPath {
	'/': typeof IndexLazyRoute;
	'': typeof AuthRouteWithChildren;
	'/users/add': typeof AuthUsersAddRoute;
	'/users/add-single-user': typeof AuthUsersAddSingleUserRoute;
	'/admin/add': typeof AuthAdminAddLazyRoute;
	'/camera/add': typeof AuthCameraAddLazyRoute;
	'/monitoring/history': typeof AuthMonitoringHistoryLazyRoute;
	'/organization/add': typeof AuthOrganizationAddLazyRoute;
	'/point/add': typeof AuthPointAddLazyRoute;
	'/admin': typeof AuthAdminIndexLazyRoute;
	'/camera': typeof AuthCameraIndexLazyRoute;
	'/monitoring': typeof AuthMonitoringIndexLazyRoute;
	'/organization': typeof AuthOrganizationIndexLazyRoute;
	'/point': typeof AuthPointIndexLazyRoute;
	'/users': typeof AuthUsersIndexLazyRoute;
	'/admin/edit/$id': typeof AuthAdminEditIdLazyRoute;
	'/camera/edit/$id': typeof AuthCameraEditIdLazyRoute;
	'/organization/edit/$id': typeof AuthOrganizationEditIdLazyRoute;
	'/point/edit/$id': typeof AuthPointEditIdLazyRoute;
	'/users/edit/$id': typeof AuthUsersEditIdLazyRoute;
}

export interface FileRoutesByTo {
	'/': typeof IndexLazyRoute;
	'': typeof AuthRouteWithChildren;
	'/users/add': typeof AuthUsersAddRoute;
	'/users/add-single-user': typeof AuthUsersAddSingleUserRoute;
	'/admin/add': typeof AuthAdminAddLazyRoute;
	'/camera/add': typeof AuthCameraAddLazyRoute;
	'/monitoring/history': typeof AuthMonitoringHistoryLazyRoute;
	'/organization/add': typeof AuthOrganizationAddLazyRoute;
	'/point/add': typeof AuthPointAddLazyRoute;
	'/admin': typeof AuthAdminIndexLazyRoute;
	'/camera': typeof AuthCameraIndexLazyRoute;
	'/monitoring': typeof AuthMonitoringIndexLazyRoute;
	'/organization': typeof AuthOrganizationIndexLazyRoute;
	'/point': typeof AuthPointIndexLazyRoute;
	'/users': typeof AuthUsersIndexLazyRoute;
	'/admin/edit/$id': typeof AuthAdminEditIdLazyRoute;
	'/camera/edit/$id': typeof AuthCameraEditIdLazyRoute;
	'/organization/edit/$id': typeof AuthOrganizationEditIdLazyRoute;
	'/point/edit/$id': typeof AuthPointEditIdLazyRoute;
	'/users/edit/$id': typeof AuthUsersEditIdLazyRoute;
}

export interface FileRoutesById {
	__root__: typeof rootRoute;
	'/': typeof IndexLazyRoute;
	'/_auth': typeof AuthRouteWithChildren;
	'/_auth/users/add': typeof AuthUsersAddRoute;
	'/_auth/users/add-single-user': typeof AuthUsersAddSingleUserRoute;
	'/_auth/admin/add': typeof AuthAdminAddLazyRoute;
	'/_auth/camera/add': typeof AuthCameraAddLazyRoute;
	'/_auth/monitoring/history': typeof AuthMonitoringHistoryLazyRoute;
	'/_auth/organization/add': typeof AuthOrganizationAddLazyRoute;
	'/_auth/point/add': typeof AuthPointAddLazyRoute;
	'/_auth/admin/': typeof AuthAdminIndexLazyRoute;
	'/_auth/camera/': typeof AuthCameraIndexLazyRoute;
	'/_auth/monitoring/': typeof AuthMonitoringIndexLazyRoute;
	'/_auth/organization/': typeof AuthOrganizationIndexLazyRoute;
	'/_auth/point/': typeof AuthPointIndexLazyRoute;
	'/_auth/users/': typeof AuthUsersIndexLazyRoute;
	'/_auth/admin/edit/$id': typeof AuthAdminEditIdLazyRoute;
	'/_auth/camera/edit/$id': typeof AuthCameraEditIdLazyRoute;
	'/_auth/organization/edit/$id': typeof AuthOrganizationEditIdLazyRoute;
	'/_auth/point/edit/$id': typeof AuthPointEditIdLazyRoute;
	'/_auth/users/edit/$id': typeof AuthUsersEditIdLazyRoute;
}

export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths:
		| '/'
		| ''
		| '/users/add'
		| '/users/add-single-user'
		| '/admin/add'
		| '/camera/add'
		| '/monitoring/history'
		| '/organization/add'
		| '/point/add'
		| '/admin'
		| '/camera'
		| '/monitoring'
		| '/organization'
		| '/point'
		| '/users'
		| '/admin/edit/$id'
		| '/camera/edit/$id'
		| '/organization/edit/$id'
		| '/point/edit/$id'
		| '/users/edit/$id';
	fileRoutesByTo: FileRoutesByTo;
	to:
		| '/'
		| ''
		| '/users/add'
		| '/users/add-single-user'
		| '/admin/add'
		| '/camera/add'
		| '/monitoring/history'
		| '/organization/add'
		| '/point/add'
		| '/admin'
		| '/camera'
		| '/monitoring'
		| '/organization'
		| '/point'
		| '/users'
		| '/admin/edit/$id'
		| '/camera/edit/$id'
		| '/organization/edit/$id'
		| '/point/edit/$id'
		| '/users/edit/$id';
	id:
		| '__root__'
		| '/'
		| '/_auth'
		| '/_auth/users/add'
		| '/_auth/users/add-single-user'
		| '/_auth/admin/add'
		| '/_auth/camera/add'
		| '/_auth/monitoring/history'
		| '/_auth/organization/add'
		| '/_auth/point/add'
		| '/_auth/admin/'
		| '/_auth/camera/'
		| '/_auth/monitoring/'
		| '/_auth/organization/'
		| '/_auth/point/'
		| '/_auth/users/'
		| '/_auth/admin/edit/$id'
		| '/_auth/camera/edit/$id'
		| '/_auth/organization/edit/$id'
		| '/_auth/point/edit/$id'
		| '/_auth/users/edit/$id';
	fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
	IndexLazyRoute: typeof IndexLazyRoute;
	AuthRoute: typeof AuthRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
	IndexLazyRoute: IndexLazyRoute,
	AuthRoute: AuthRouteWithChildren,
};

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/users/add",
        "/_auth/users/add-single-user",
        "/_auth/admin/add",
        "/_auth/camera/add",
        "/_auth/monitoring/history",
        "/_auth/organization/add",
        "/_auth/point/add",
        "/_auth/admin/",
        "/_auth/camera/",
        "/_auth/monitoring/",
        "/_auth/organization/",
        "/_auth/point/",
        "/_auth/users/",
        "/_auth/admin/edit/$id",
        "/_auth/camera/edit/$id",
        "/_auth/organization/edit/$id",
        "/_auth/point/edit/$id",
        "/_auth/users/edit/$id"
      ]
    },
    "/_auth/users/add": {
      "filePath": "_auth/users/add.ts",
      "parent": "/_auth"
    },
    "/_auth/users/add-single-user": {
      "filePath": "_auth/users/add-single-user.ts",
      "parent": "/_auth"
    },
    "/_auth/admin/add": {
      "filePath": "_auth/admin/add.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/camera/add": {
      "filePath": "_auth/camera/add.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/monitoring/history": {
      "filePath": "_auth/monitoring/history.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/organization/add": {
      "filePath": "_auth/organization/add.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/point/add": {
      "filePath": "_auth/point/add.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/admin/": {
      "filePath": "_auth/admin/index.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/camera/": {
      "filePath": "_auth/camera/index.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/monitoring/": {
      "filePath": "_auth/monitoring/index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/organization/": {
      "filePath": "_auth/organization/index.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/point/": {
      "filePath": "_auth/point/index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/": {
      "filePath": "_auth/users/index.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/admin/edit/$id": {
      "filePath": "_auth/admin/edit.$id.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/camera/edit/$id": {
      "filePath": "_auth/camera/edit.$id.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/organization/edit/$id": {
      "filePath": "_auth/organization/edit.$id.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/point/edit/$id": {
      "filePath": "_auth/point/edit.$id.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/users/edit/$id": {
      "filePath": "_auth/users/edit.$id.lazy.ts",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
