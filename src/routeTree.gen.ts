/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './app/routes/__root';
import { Route as AuthImport } from './app/routes/_auth';
import { Route as IndexImport } from './app/routes/index';
import { Route as AuthUsersAddSingleUserImport } from './app/routes/_auth/users/add-single-user';
import { Route as AuthUsersAddImport } from './app/routes/_auth/users/add';

// Create Virtual Routes

const AuthUsersIndexLazyImport = createFileRoute('/_auth/users/')();
const AuthPointsIndexLazyImport = createFileRoute('/_auth/points/')();
const AuthOrganizationsIndexLazyImport = createFileRoute('/_auth/organizations/')();
const AuthMonitoringIndexLazyImport = createFileRoute('/_auth/monitoring/')();
const AuthCamerasIndexLazyImport = createFileRoute('/_auth/cameras/')();
const AuthAdminsIndexLazyImport = createFileRoute('/_auth/admins/')();
const AuthOrganizationsAddLazyImport = createFileRoute('/_auth/organizations/add')();
const AuthMonitoringHistoryLazyImport = createFileRoute('/_auth/monitoring/history')();
const AuthCamerasAddLazyImport = createFileRoute('/_auth/cameras/add')();
const AuthAdminsAddLazyImport = createFileRoute('/_auth/admins/add')();
const AuthUsersEditIdLazyImport = createFileRoute('/_auth/users/edit/$id')();
const AuthOrganizationsEditIdLazyImport = createFileRoute('/_auth/organizations/edit/$id')();
const AuthCamerasEditIdLazyImport = createFileRoute('/_auth/cameras/edit/$id')();
const AuthAdminsEditIdLazyImport = createFileRoute('/_auth/admins/edit/$id')();

// Create/Update Routes

const AuthRoute = AuthImport.update({
	id: '/_auth',
	getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
	path: '/',
	getParentRoute: () => rootRoute,
} as any);

const AuthUsersIndexLazyRoute = AuthUsersIndexLazyImport.update({
	path: '/users/',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/users/index.lazy').then((d) => d.Route));

const AuthPointsIndexLazyRoute = AuthPointsIndexLazyImport.update({
	path: '/points/',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/points/index.lazy').then((d) => d.Route));

const AuthOrganizationsIndexLazyRoute = AuthOrganizationsIndexLazyImport.update({
	path: '/organizations/',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/organizations/index.lazy').then((d) => d.Route));

const AuthMonitoringIndexLazyRoute = AuthMonitoringIndexLazyImport.update({
	path: '/monitoring/',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/monitoring/index.lazy').then((d) => d.Route));

const AuthCamerasIndexLazyRoute = AuthCamerasIndexLazyImport.update({
	path: '/cameras/',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/cameras/index.lazy').then((d) => d.Route));

const AuthAdminsIndexLazyRoute = AuthAdminsIndexLazyImport.update({
	path: '/admins/',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/admins/index.lazy').then((d) => d.Route));

const AuthOrganizationsAddLazyRoute = AuthOrganizationsAddLazyImport.update({
	path: '/organizations/add',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/organizations/add.lazy').then((d) => d.Route));

const AuthMonitoringHistoryLazyRoute = AuthMonitoringHistoryLazyImport.update({
	path: '/monitoring/history',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/monitoring/history.lazy').then((d) => d.Route));

const AuthCamerasAddLazyRoute = AuthCamerasAddLazyImport.update({
	path: '/cameras/add',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/cameras/add.lazy').then((d) => d.Route));

const AuthAdminsAddLazyRoute = AuthAdminsAddLazyImport.update({
	path: '/admins/add',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/admins/add.lazy').then((d) => d.Route));

const AuthUsersAddSingleUserRoute = AuthUsersAddSingleUserImport.update({
	path: '/users/add-single-user',
	getParentRoute: () => AuthRoute,
} as any);

const AuthUsersAddRoute = AuthUsersAddImport.update({
	path: '/users/add',
	getParentRoute: () => AuthRoute,
} as any);

const AuthUsersEditIdLazyRoute = AuthUsersEditIdLazyImport.update({
	path: '/users/edit/$id',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/users/edit.$id.lazy').then((d) => d.Route));

const AuthOrganizationsEditIdLazyRoute = AuthOrganizationsEditIdLazyImport.update({
	path: '/organizations/edit/$id',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/organizations/edit.$id.lazy').then((d) => d.Route));

const AuthCamerasEditIdLazyRoute = AuthCamerasEditIdLazyImport.update({
	path: '/cameras/edit/$id',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/cameras/edit.$id.lazy').then((d) => d.Route));

const AuthAdminsEditIdLazyRoute = AuthAdminsEditIdLazyImport.update({
	path: '/admins/edit/$id',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/routes/_auth/admins/edit.$id.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
	interface FileRoutesByPath {
		'/': {
			id: '/';
			path: '/';
			fullPath: '/';
			preLoaderRoute: typeof IndexImport;
			parentRoute: typeof rootRoute;
		};
		'/_auth': {
			id: '/_auth';
			path: '';
			fullPath: '';
			preLoaderRoute: typeof AuthImport;
			parentRoute: typeof rootRoute;
		};
		'/_auth/users/add': {
			id: '/_auth/users/add';
			path: '/users/add';
			fullPath: '/users/add';
			preLoaderRoute: typeof AuthUsersAddImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/users/add-single-user': {
			id: '/_auth/users/add-single-user';
			path: '/users/add-single-user';
			fullPath: '/users/add-single-user';
			preLoaderRoute: typeof AuthUsersAddSingleUserImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/admins/add': {
			id: '/_auth/admins/add';
			path: '/admins/add';
			fullPath: '/admins/add';
			preLoaderRoute: typeof AuthAdminsAddLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/cameras/add': {
			id: '/_auth/cameras/add';
			path: '/cameras/add';
			fullPath: '/cameras/add';
			preLoaderRoute: typeof AuthCamerasAddLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/monitoring/history': {
			id: '/_auth/monitoring/history';
			path: '/monitoring/history';
			fullPath: '/monitoring/history';
			preLoaderRoute: typeof AuthMonitoringHistoryLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/organizations/add': {
			id: '/_auth/organizations/add';
			path: '/organizations/add';
			fullPath: '/organizations/add';
			preLoaderRoute: typeof AuthOrganizationsAddLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/admins/': {
			id: '/_auth/admins/';
			path: '/admins';
			fullPath: '/admins';
			preLoaderRoute: typeof AuthAdminsIndexLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/cameras/': {
			id: '/_auth/cameras/';
			path: '/cameras';
			fullPath: '/cameras';
			preLoaderRoute: typeof AuthCamerasIndexLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/monitoring/': {
			id: '/_auth/monitoring/';
			path: '/monitoring';
			fullPath: '/monitoring';
			preLoaderRoute: typeof AuthMonitoringIndexLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/organizations/': {
			id: '/_auth/organizations/';
			path: '/organizations';
			fullPath: '/organizations';
			preLoaderRoute: typeof AuthOrganizationsIndexLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/points/': {
			id: '/_auth/points/';
			path: '/points';
			fullPath: '/points';
			preLoaderRoute: typeof AuthPointsIndexLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/users/': {
			id: '/_auth/users/';
			path: '/users';
			fullPath: '/users';
			preLoaderRoute: typeof AuthUsersIndexLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/admins/edit/$id': {
			id: '/_auth/admins/edit/$id';
			path: '/admins/edit/$id';
			fullPath: '/admins/edit/$id';
			preLoaderRoute: typeof AuthAdminsEditIdLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/cameras/edit/$id': {
			id: '/_auth/cameras/edit/$id';
			path: '/cameras/edit/$id';
			fullPath: '/cameras/edit/$id';
			preLoaderRoute: typeof AuthCamerasEditIdLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/organizations/edit/$id': {
			id: '/_auth/organizations/edit/$id';
			path: '/organizations/edit/$id';
			fullPath: '/organizations/edit/$id';
			preLoaderRoute: typeof AuthOrganizationsEditIdLazyImport;
			parentRoute: typeof AuthImport;
		};
		'/_auth/users/edit/$id': {
			id: '/_auth/users/edit/$id';
			path: '/users/edit/$id';
			fullPath: '/users/edit/$id';
			preLoaderRoute: typeof AuthUsersEditIdLazyImport;
			parentRoute: typeof AuthImport;
		};
	}
}

// Create and export the route tree

interface AuthRouteChildren {
	AuthUsersAddRoute: typeof AuthUsersAddRoute;
	AuthUsersAddSingleUserRoute: typeof AuthUsersAddSingleUserRoute;
	AuthAdminsAddLazyRoute: typeof AuthAdminsAddLazyRoute;
	AuthCamerasAddLazyRoute: typeof AuthCamerasAddLazyRoute;
	AuthMonitoringHistoryLazyRoute: typeof AuthMonitoringHistoryLazyRoute;
	AuthOrganizationsAddLazyRoute: typeof AuthOrganizationsAddLazyRoute;
	AuthAdminsIndexLazyRoute: typeof AuthAdminsIndexLazyRoute;
	AuthCamerasIndexLazyRoute: typeof AuthCamerasIndexLazyRoute;
	AuthMonitoringIndexLazyRoute: typeof AuthMonitoringIndexLazyRoute;
	AuthOrganizationsIndexLazyRoute: typeof AuthOrganizationsIndexLazyRoute;
	AuthPointsIndexLazyRoute: typeof AuthPointsIndexLazyRoute;
	AuthUsersIndexLazyRoute: typeof AuthUsersIndexLazyRoute;
	AuthAdminsEditIdLazyRoute: typeof AuthAdminsEditIdLazyRoute;
	AuthCamerasEditIdLazyRoute: typeof AuthCamerasEditIdLazyRoute;
	AuthOrganizationsEditIdLazyRoute: typeof AuthOrganizationsEditIdLazyRoute;
	AuthUsersEditIdLazyRoute: typeof AuthUsersEditIdLazyRoute;
}

const AuthRouteChildren: AuthRouteChildren = {
	AuthUsersAddRoute: AuthUsersAddRoute,
	AuthUsersAddSingleUserRoute: AuthUsersAddSingleUserRoute,
	AuthAdminsAddLazyRoute: AuthAdminsAddLazyRoute,
	AuthCamerasAddLazyRoute: AuthCamerasAddLazyRoute,
	AuthMonitoringHistoryLazyRoute: AuthMonitoringHistoryLazyRoute,
	AuthOrganizationsAddLazyRoute: AuthOrganizationsAddLazyRoute,
	AuthAdminsIndexLazyRoute: AuthAdminsIndexLazyRoute,
	AuthCamerasIndexLazyRoute: AuthCamerasIndexLazyRoute,
	AuthMonitoringIndexLazyRoute: AuthMonitoringIndexLazyRoute,
	AuthOrganizationsIndexLazyRoute: AuthOrganizationsIndexLazyRoute,
	AuthPointsIndexLazyRoute: AuthPointsIndexLazyRoute,
	AuthUsersIndexLazyRoute: AuthUsersIndexLazyRoute,
	AuthAdminsEditIdLazyRoute: AuthAdminsEditIdLazyRoute,
	AuthCamerasEditIdLazyRoute: AuthCamerasEditIdLazyRoute,
	AuthOrganizationsEditIdLazyRoute: AuthOrganizationsEditIdLazyRoute,
	AuthUsersEditIdLazyRoute: AuthUsersEditIdLazyRoute,
};

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren);

export interface FileRoutesByFullPath {
	'/': typeof IndexRoute;
	'': typeof AuthRouteWithChildren;
	'/users/add': typeof AuthUsersAddRoute;
	'/users/add-single-user': typeof AuthUsersAddSingleUserRoute;
	'/admins/add': typeof AuthAdminsAddLazyRoute;
	'/cameras/add': typeof AuthCamerasAddLazyRoute;
	'/monitoring/history': typeof AuthMonitoringHistoryLazyRoute;
	'/organizations/add': typeof AuthOrganizationsAddLazyRoute;
	'/admins': typeof AuthAdminsIndexLazyRoute;
	'/cameras': typeof AuthCamerasIndexLazyRoute;
	'/monitoring': typeof AuthMonitoringIndexLazyRoute;
	'/organizations': typeof AuthOrganizationsIndexLazyRoute;
	'/points': typeof AuthPointsIndexLazyRoute;
	'/users': typeof AuthUsersIndexLazyRoute;
	'/admins/edit/$id': typeof AuthAdminsEditIdLazyRoute;
	'/cameras/edit/$id': typeof AuthCamerasEditIdLazyRoute;
	'/organizations/edit/$id': typeof AuthOrganizationsEditIdLazyRoute;
	'/users/edit/$id': typeof AuthUsersEditIdLazyRoute;
}

export interface FileRoutesByTo {
	'/': typeof IndexRoute;
	'': typeof AuthRouteWithChildren;
	'/users/add': typeof AuthUsersAddRoute;
	'/users/add-single-user': typeof AuthUsersAddSingleUserRoute;
	'/admins/add': typeof AuthAdminsAddLazyRoute;
	'/cameras/add': typeof AuthCamerasAddLazyRoute;
	'/monitoring/history': typeof AuthMonitoringHistoryLazyRoute;
	'/organizations/add': typeof AuthOrganizationsAddLazyRoute;
	'/admins': typeof AuthAdminsIndexLazyRoute;
	'/cameras': typeof AuthCamerasIndexLazyRoute;
	'/monitoring': typeof AuthMonitoringIndexLazyRoute;
	'/organizations': typeof AuthOrganizationsIndexLazyRoute;
	'/points': typeof AuthPointsIndexLazyRoute;
	'/users': typeof AuthUsersIndexLazyRoute;
	'/admins/edit/$id': typeof AuthAdminsEditIdLazyRoute;
	'/cameras/edit/$id': typeof AuthCamerasEditIdLazyRoute;
	'/organizations/edit/$id': typeof AuthOrganizationsEditIdLazyRoute;
	'/users/edit/$id': typeof AuthUsersEditIdLazyRoute;
}

export interface FileRoutesById {
	__root__: typeof rootRoute;
	'/': typeof IndexRoute;
	'/_auth': typeof AuthRouteWithChildren;
	'/_auth/users/add': typeof AuthUsersAddRoute;
	'/_auth/users/add-single-user': typeof AuthUsersAddSingleUserRoute;
	'/_auth/admins/add': typeof AuthAdminsAddLazyRoute;
	'/_auth/cameras/add': typeof AuthCamerasAddLazyRoute;
	'/_auth/monitoring/history': typeof AuthMonitoringHistoryLazyRoute;
	'/_auth/organizations/add': typeof AuthOrganizationsAddLazyRoute;
	'/_auth/admins/': typeof AuthAdminsIndexLazyRoute;
	'/_auth/cameras/': typeof AuthCamerasIndexLazyRoute;
	'/_auth/monitoring/': typeof AuthMonitoringIndexLazyRoute;
	'/_auth/organizations/': typeof AuthOrganizationsIndexLazyRoute;
	'/_auth/points/': typeof AuthPointsIndexLazyRoute;
	'/_auth/users/': typeof AuthUsersIndexLazyRoute;
	'/_auth/admins/edit/$id': typeof AuthAdminsEditIdLazyRoute;
	'/_auth/cameras/edit/$id': typeof AuthCamerasEditIdLazyRoute;
	'/_auth/organizations/edit/$id': typeof AuthOrganizationsEditIdLazyRoute;
	'/_auth/users/edit/$id': typeof AuthUsersEditIdLazyRoute;
}

export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths:
		| '/'
		| ''
		| '/users/add'
		| '/users/add-single-user'
		| '/admins/add'
		| '/cameras/add'
		| '/monitoring/history'
		| '/organizations/add'
		| '/admins'
		| '/cameras'
		| '/monitoring'
		| '/organizations'
		| '/points'
		| '/users'
		| '/admins/edit/$id'
		| '/cameras/edit/$id'
		| '/organizations/edit/$id'
		| '/users/edit/$id';
	fileRoutesByTo: FileRoutesByTo;
	to:
		| '/'
		| ''
		| '/users/add'
		| '/users/add-single-user'
		| '/admins/add'
		| '/cameras/add'
		| '/monitoring/history'
		| '/organizations/add'
		| '/admins'
		| '/cameras'
		| '/monitoring'
		| '/organizations'
		| '/points'
		| '/users'
		| '/admins/edit/$id'
		| '/cameras/edit/$id'
		| '/organizations/edit/$id'
		| '/users/edit/$id';
	id:
		| '__root__'
		| '/'
		| '/_auth'
		| '/_auth/users/add'
		| '/_auth/users/add-single-user'
		| '/_auth/admins/add'
		| '/_auth/cameras/add'
		| '/_auth/monitoring/history'
		| '/_auth/organizations/add'
		| '/_auth/admins/'
		| '/_auth/cameras/'
		| '/_auth/monitoring/'
		| '/_auth/organizations/'
		| '/_auth/points/'
		| '/_auth/users/'
		| '/_auth/admins/edit/$id'
		| '/_auth/cameras/edit/$id'
		| '/_auth/organizations/edit/$id'
		| '/_auth/users/edit/$id';
	fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute;
	AuthRoute: typeof AuthRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
	AuthRoute: AuthRouteWithChildren,
};

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/users/add",
        "/_auth/users/add-single-user",
        "/_auth/admins/add",
        "/_auth/cameras/add",
        "/_auth/monitoring/history",
        "/_auth/organizations/add",
        "/_auth/admins/",
        "/_auth/cameras/",
        "/_auth/monitoring/",
        "/_auth/organizations/",
        "/_auth/points/",
        "/_auth/users/",
        "/_auth/admins/edit/$id",
        "/_auth/cameras/edit/$id",
        "/_auth/organizations/edit/$id",
        "/_auth/users/edit/$id"
      ]
    },
    "/_auth/users/add": {
      "filePath": "_auth/users/add.ts",
      "parent": "/_auth"
    },
    "/_auth/users/add-single-user": {
      "filePath": "_auth/users/add-single-user.ts",
      "parent": "/_auth"
    },
    "/_auth/admins/add": {
      "filePath": "_auth/admins/add.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/cameras/add": {
      "filePath": "_auth/cameras/add.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/monitoring/history": {
      "filePath": "_auth/monitoring/history.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/organizations/add": {
      "filePath": "_auth/organizations/add.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/admins/": {
      "filePath": "_auth/admins/index.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/cameras/": {
      "filePath": "_auth/cameras/index.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/monitoring/": {
      "filePath": "_auth/monitoring/index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/organizations/": {
      "filePath": "_auth/organizations/index.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/points/": {
      "filePath": "_auth/points/index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/": {
      "filePath": "_auth/users/index.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/admins/edit/$id": {
      "filePath": "_auth/admins/edit.$id.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/cameras/edit/$id": {
      "filePath": "_auth/cameras/edit.$id.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/organizations/edit/$id": {
      "filePath": "_auth/organizations/edit.$id.lazy.ts",
      "parent": "/_auth"
    },
    "/_auth/users/edit/$id": {
      "filePath": "_auth/users/edit.$id.lazy.ts",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
